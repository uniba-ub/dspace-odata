stages:
  - img:build
  - img:tag

  - deploy:staging
  - deploy:production

.my_global_variables: &global_variables
    DOCKER_HOST: unix:///var/run/docker.sock
    SERVER_DOMAIN: test.itfl-service.rz.uni-bamberg.de
    COMPOSE_HTTP_TIMEOUT: "300"

##############
### Runner ###
##############

.runner_build: &runner_build
  image: docker:latest
  tags:
    - build
    - amd64

.runner_deploy: &runner_deploy
  image: firecyberice/docker-toolbox:latest
  tags:
    - deploy
    - amd64

.tagging:
  script: &tagging
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker pull ${CI_REGISTRY_IMAGE}:${CI_PIPELINE_ID}
    - docker tag ${CI_REGISTRY_IMAGE}:${CI_PIPELINE_ID} ${CI_REGISTRY_IMAGE}:${NEW_TAG}
    - docker push ${CI_REGISTRY_IMAGE}:${NEW_TAG}

.building:
  script: &building
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
    - >-
      docker build --pull
      --label org.label-schema.schema-version="1.0"
      --label org.label-schema.vendor="Uni-Bamberg"
      --label org.label-schema.build-date=`date -u +"%Y-%m-%dT%H:%M:%SZ"`
      --label org.label-schema.version="${CI_COMMIT_TAG}"
      --label org.label-schema.vcs-ref="${CI_COMMIT_SHA}"
      --label org.label-schema.vcs-url="${CI_PROJECT_URL}"
      --label org.label-schema.name="${CI_PROJECT_NAME}"
      --tag ${CI_REGISTRY_IMAGE}:${CI_PIPELINE_ID} .
    - docker push ${CI_REGISTRY_IMAGE}:${CI_PIPELINE_ID}

.runtime:
  script: &runtime
    - docker-compose down -v || true
    - docker-compose config
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
    - docker-compose pull
    - docker-compose up -d
    - echo -e "NAME=${NAME}\nURL=${URL}\nIMAGE=${IMAGE}" > .env
    - cat .env

###################
### Build Image ###
###################
img:
  stage: img:build
  <<: *runner_build
  variables:
    <<: *global_variables
  script: *building

#################
### Tag Image ###
#################
tag-latest:
  stage: img:tag
  only:
    - master
  <<: *runner_build
  variables:
    <<: *global_variables
    NEW_TAG: latest
  script: *tagging

tag-staging:
  stage: img:tag
  only:
    - branches
  except:
    - master
  <<: *runner_build
  variables:
    <<: *global_variables
    NEW_TAG: ${CI_COMMIT_REF_SLUG}
  script: *tagging

tag-version:
  stage: img:tag
  only:
    - tags
  <<: *runner_build
  variables:
    <<: *global_variables
    NEW_TAG: ${CI_COMMIT_TAG}
  script: *tagging

##########################
### Manage deployments ###
##########################

###########
# STAGING #
###########
.start_staging:
  stage: deploy:staging
  only:
    - branches
  except:
    - master
  <<: *runner_deploy
  variables:
    <<: *global_variables
    NAME:  ${CI_COMMIT_REF_SLUG}-${CI_PROJECT_NAME}
    URL: ${CI_COMMIT_REF_SLUG}-${CI_PROJECT_NAME}-${CI_PROJECT_ID}.${SERVER_DOMAIN}
    IMAGE: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}
    COMPOSE_PROJECT_NAME: ${CI_COMMIT_REF_SLUG}-${CI_PROJECT_ID}
  environment:
    name: staging/$CI_COMMIT_REF_NAME
    url: http://$CI_COMMIT_REF_SLUG-$CI_PROJECT_NAME-$CI_PROJECT_ID.$SERVER_DOMAIN
    on_stop: stop_staging
  script: *runtime

.stop_staging:
  stage: deploy:staging
  when: manual
  only:
    - branches
  except:
    - master
  <<: *runner_deploy
  variables:
    <<: *global_variables
    GIT_STRATEGY: none
    NAME:  ${CI_COMMIT_REF_SLUG}-${CI_PROJECT_NAME}
    URL: ${CI_COMMIT_REF_SLUG}-${CI_PROJECT_NAME}-${CI_PROJECT_ID}.${SERVER_DOMAIN}
    IMAGE: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}
    COMPOSE_PROJECT_NAME: ${CI_COMMIT_REF_SLUG}-${CI_PROJECT_ID}
  environment:
    name: staging/$CI_COMMIT_REF_NAME
    action: stop
  script:
    - docker-compose down -v || true

##############
# PRODUCTION #
##############
.start_production:
  stage: deploy:production
  only:
    - master
  <<: *runner_deploy
  variables:
    <<: *global_variables
    NAME:  ${CI_PROJECT_NAME}
    URL: ${CI_PROJECT_NAME}-${CI_PROJECT_ID}.${SERVER_DOMAIN}
    IMAGE: ${CI_REGISTRY_IMAGE}:latest
    COMPOSE_PROJECT_NAME: ${CI_COMMIT_REF_SLUG}-${CI_PROJECT_ID}
  environment:
    name: production
    url: http://$CI_PROJECT_NAME-$CI_PROJECT_ID.$SERVER_DOMAIN
    on_stop: stop_production
  script: *runtime


.stop_production:
  stage: deploy:production
  when: manual
  only:
    - master
  <<: *runner_deploy
  variables:
    <<: *global_variables
    GIT_STRATEGY: none
    NAME:  ${CI_PROJECT_NAME}
    URL: ${CI_PROJECT_NAME}-${CI_PROJECT_ID}.${SERVER_DOMAIN}
    IMAGE: ${CI_REGISTRY_IMAGE}:latest
    COMPOSE_PROJECT_NAME: ${CI_COMMIT_REF_SLUG}-${CI_PROJECT_ID}
  environment:
    name: production
    action: stop
  script:
    - docker-compose down -v || true
